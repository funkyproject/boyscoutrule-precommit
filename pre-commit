#!/usr/bin/php
<?php
$output = array();
$return = 0;
$standard = 'ruleset.xml';

exec('git rev-parse --verify HEAD 2> /dev/null', $output, $return);
$against = $return == 0 ? 'HEAD' : '4b825dc642cb6eb9a060e54bf8d69288fbee4904';

exec("git diff-index --cached --name-only {$against}", $output);

$filename_pattern = '/\.php$/';
$exit_status = 0;

foreach ($output as $file) {
    if (!preg_match($filename_pattern, $file)) {
        // don't check files that aren't PHP
        continue;
    }

    $lint_output = array();
    exec("php -l " . escapeshellarg($file), $lint_output, $return);
    if ($return == 0) {
        continue;
    }
    echo implode("\n", $lint_output), "\n";
    $exit_status = 1;
}

if ($exit_status === 1) {
	exit($exit_status);
}

foreach ($output as $file) {
    if (!preg_match($filename_pattern, $file)) {
        // don't check files that aren't PHP
        continue;
    }

    $phpcs_output = array();
    $pmd_output = array();
    
    
    exec("phpcs --standard={$standard} -n " . escapeshellarg($file), $phpcs_output, $return_cs);
    exec("phpmd " . escapeshellarg($file) . " text  build/phpmd.xml", $phpmd_output, $return_pmd);
    if ($return_cs == 0 && $return_pmd == 0) {
        continue;
    }

    echo "PHP CodeSniffer \n";
    echo implode("\n", $phpcs_output) . "\n";
    
    echo "PHP Mess Detector \n";
    echo implode("\n", $phpmd_output). "\n"; 

    $exit_status = 1;
}

exit($exit_status);
